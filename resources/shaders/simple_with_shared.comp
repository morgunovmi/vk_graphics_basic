#version 430

layout( local_size_x = 512 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer v
{
    float values[];
};

layout(std430, binding = 1) buffer r
{
    float result[];
};

const uint gSize = gl_WorkGroupSize.x;
shared float localValues[gSize + 6];

void main() 
{
    const uint global_id = gl_GlobalInvocationID.x;
    const uint local_id = gl_LocalInvocationID.x;

    localValues[local_id + 3] = values[global_id];
    if (local_id < 3)
    {
        if (int(global_id) - 3 < 0)
        {
            localValues[local_id] = 0;
        }
        else
        {
            localValues[local_id] = values[int(global_id) - 3];
        }
    }

    if (local_id > gSize - 3 - 1)
    {
        int offset = int(local_id - gSize);
        if (int(global_id) + 3 > PushConstant.len - 1)
        {
            localValues[local_id + 6] = 0;
        }
        else
        {
            localValues[local_id + 6] = values[int(global_id) + 3];
        }
    }
    barrier();
    
    float accum = 0.0;
    for (int i = -3; i <= 3; ++i) {
        accum += localValues[int(local_id) + i + 3];
    }
    result[global_id] = localValues[local_id + 3] - accum / 7.0;
}