#version 430

layout( local_size_x = 512 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer v
{
    float values[];
};

layout(std430, binding = 1) buffer r
{
    float result[];
};

const uint gSize = gl_WorkGroupSize.x;
shared float localValues[gSize + 6];

void main() 
{
    const uint idx = gl_GlobalInvocationID.x;
    const uint lidx = gl_LocalInvocationID.x;
    const uint gIdx = gl_WorkGroupID.x;

    localValues[lidx + 3] = values[idx];
    const int start = int(gIdx * gSize);
    const int end = int((gIdx + 1) * gSize);
    for (int i = 0; i < 3; ++i)
    {
        const int cur_idx = start - 3 + i;
        if (cur_idx >= 0 && cur_idx < PushConstant.len)
            localValues[i] = values[cur_idx];

        const int cur_idx_end = end + i;
        if (cur_idx_end >= 0 && cur_idx_end < PushConstant.len)
            localValues[gSize + 3 + i] = values[cur_idx_end];
    }
    barrier();
    
    float accum = 0.0;
    for (int i = -3; i <= 3; ++i) {
        accum += localValues[int(lidx) + i + 3];
    }
    result[idx] = localValues[lidx + 3] - accum / 7.0;
}